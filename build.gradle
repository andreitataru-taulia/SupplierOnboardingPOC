plugins {
    id "org.springframework.boot" version "2.6.4"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "groovy"
}

group = "com.taulia"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}

ext {
    set("groovy.version", "3.0.10")
    set('testcontainersVersion', "1.16.2")
    mapstruct = "1.5.0.Beta2"
    mapstructLombok = "0.2.0"
    openapi = "1.6.6"
    logback = "0.1.5"
    logbackEncoder = "7.0.1"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.liquibase:liquibase-core'
    implementation "org.codehaus.groovy:groovy"

    implementation "org.springdoc:springdoc-openapi-groovy:${openapi}"
    implementation "org.springdoc:springdoc-openapi-ui:${openapi}"
    implementation "org.springdoc:springdoc-openapi-webmvc-core:${openapi}"
    implementation "org.springdoc:springdoc-openapi-hateoas:${openapi}"
    implementation "org.springdoc:springdoc-openapi-security:${openapi}"
    implementation "ch.qos.logback.contrib:logback-json-classic:${logback}"
    implementation "ch.qos.logback.contrib:logback-jackson:${logback}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logbackEncoder}"
    implementation "org.mapstruct:mapstruct:${mapstruct}"
    implementation "org.projectlombok:lombok-mapstruct-binding:${mapstructLombok}"
    implementation 'org.springframework.boot:spring-boot-starter-security'


    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    enabled = false
}

compileGroovy.groovyOptions.javaAnnotationProcessing = true

task testReport(type: TestReport) {
    destinationDirectory = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}
