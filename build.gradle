plugins {
    id "org.springframework.boot" version "2.6.4"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "groovy"
}

group = "com.taulia"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


ext {
    set("groovy.version", "3.0.10")
    mapstruct = "1.4.2.Final"
    mapstructLombok = "0.2.0"
    openapi = "1.6.6"
    logback = "0.1.5"
    logbackEncoder = "7.0.1"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-hateoas"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.codehaus.groovy:groovy"
    implementation "org.springdoc:springdoc-openapi-ui:${openapi}"
    implementation "org.springdoc:springdoc-openapi-webmvc-core:${openapi}"
    implementation "org.springdoc:springdoc-openapi-hateoas:${openapi}"
    implementation "org.springdoc:springdoc-openapi-groovy:${openapi}"
    implementation "org.springdoc:springdoc-openapi-groovy:${openapi}"
    implementation "ch.qos.logback.contrib:logback-json-classic:${logback}"
    implementation "ch.qos.logback.contrib:logback-jackson:${logback}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logbackEncoder}"
    implementation "org.mapstruct:mapstruct:${mapstruct}"
    implementation "org.projectlombok:lombok-mapstruct-binding:${mapstructLombok}"
    implementation "org.liquibase:liquibase-core"

    implementation 'com.github.saasquatch:json-schema-inferrer:0.1.4'

    compileOnly "org.projectlombok:lombok"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    runtimeOnly "io.micrometer:micrometer-registry-prometheus"
    runtimeOnly "mysql:mysql-connector-java"
    runtimeOnly "io.netty:netty-resolver-dns-native-macos:4.1.74.Final:osx-aarch_64"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'org.testng:testng:7.5', "org.easytesting:fest-assert:1.4"
}

//tasks.withType(JavaCompile) {
//    options.compilerArgs = [
//            "-Amapstruct.suppressGeneratorTimestamp=true"
//    ]
//}

tasks.withType(JavaCompile).configureEach {
    options.fork = true
}

tasks.named("test") {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.incremental = true
}

jar {
    enabled = false
}

repositories {
    maven { url 'https://jitpack.io' }
}

//compileGroovy.groovyOptions.javaAnnotationProcessing = true
