plugins {
    id "org.springframework.boot" version "2.6.3"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "groovy"
}

group = "com.taulia"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set("groovy.version", "3.0.6")
    mapstruct = "1.5.0.Beta2"
    mapstructLombok = "0.2.0"
    openapi = "1.6.6"
    logback = "0.1.5"
    logbackEncoder = "7.0.1"
    unleash = "4.4.1"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-hateoas"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.apache.kafka:kafka-streams"
    implementation "org.codehaus.groovy:groovy"
    implementation "org.springdoc:springdoc-openapi-ui:${openapi}"
    implementation "org.springdoc:springdoc-openapi-webmvc-core:${openapi}"
    implementation "org.springdoc:springdoc-openapi-hateoas:${openapi}"
    implementation "org.springdoc:springdoc-openapi-groovy:${openapi}"
    implementation "org.springdoc:springdoc-openapi-groovy:${openapi}"
    implementation "ch.qos.logback.contrib:logback-json-classic:${logback}"
    implementation "ch.qos.logback.contrib:logback-jackson:${logback}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logbackEncoder}"
    implementation "org.mapstruct:mapstruct:${mapstruct}"
    implementation "org.projectlombok:lombok-mapstruct-binding:${mapstructLombok}"
    implementation "no.finn.unleash:unleash-client-java:${unleash}"
    implementation "org.flywaydb:flyway-core"

    compileOnly "org.projectlombok:lombok"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    runtimeOnly "com.h2database:h2"
    runtimeOnly "io.micrometer:micrometer-registry-prometheus"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.0.Beta2"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testng:testng:6.10", "org.easytesting:fest-assert:1.4"
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            "-Amapstruct.suppressGeneratorTimestamp=true"
    ]
}

tasks.named("test") {
    useJUnitPlatform()
}

//compileGroovy.groovyOptions.javaAnnotationProcessing = true
